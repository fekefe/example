package com.offer;

/**
 * 数值的整数次方
 * 题目：实现函数double power(double base,int exponent),求base的exponent次方。不得使用库函数，同时不需要考虑大数问题。
 * @author DEPT RD4 gaoquan(gaoquan@dvt.dvt.com) on 2018/1/25
 */
public class Class11 {
	/*
	解题思路：最一般的方法实现数值的n次方就是将一个数自身连乘n次
	底数要考虑到正数、负数和零的情况
	指数要考虑到正整数，负整数和零的情况。可能的情况有九种，其中尤其要注意底数为0，指数为负数的情况下是无意义的，因此要做特殊处理
	指数为负数的乘方运算，可先按照指数为正求得，然后求倒数得到真正结果
	解法一：全面不高效，考虑到所有边界条件和负面测试使用循环计算乘方
	解法二：全面高效完美的算法，使用公式，利用递归实现，减少计算次数
	a^n=a^(n/2)*a^(n/2)	　　　n是偶數
	a^n=a^(n/2)*a^(n/2)&a	　　n是奇数
	 */
}
